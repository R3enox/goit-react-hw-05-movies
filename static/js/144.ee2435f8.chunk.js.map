{"version":3,"file":"static/js/144.ee2435f8.chunk.js","mappings":"wQAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,I,IAEaC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAG3BX,EAAAA,EAAAA,IAAU,UAADY,OACPN,EAAO,oCAAAM,OANL,qCAOZ,KAAD,EAHgB,OAGhBL,EAAAE,EAAAI,KAHSL,EAAOD,EAAfO,KAAQN,QAAOC,EAAAM,OAAA,SAIVP,GAAO,wBAAAC,EAAAO,OAAA,GAAAX,EAAA,KACf,gBAPsBY,GAAA,OAAAf,EAAAgB,MAAA,KAAAC,UAAA,K,kBCHVC,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wYA2BvBC,EAAcH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oE,SCwBnC,EA9CgB,WACd,IAAQjB,GAAYoB,EAAAA,EAAAA,MAAZpB,QACRqB,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAfAG,EAAAA,EAAAA,YAAU,WACR,GAAK/B,EAAL,CACA,IAAMgC,EAAY,eAAApC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEjB0B,GAAa,GAAM3B,EAAAE,KAAA,EACbV,EAAWK,GAASiC,MAAK,SAAA/B,GAAO,OAAIwB,EAAkBxB,EAAQ,IAAE,KAAD,EAAAC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAA+B,GAAA/B,EAAA,SAErEgC,EAAAA,OAAAA,QAAe,+BAA+B,OAE1B,OAF0BhC,EAAAC,KAAA,EAE9C0B,GAAa,GAAO3B,EAAAiC,OAAA,4BAAAjC,EAAAO,OAAA,GAAAX,EAAA,uBAEvB,kBATiB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAUlBmB,GAXoB,CAYtB,GAAG,CAAChC,KAGFqC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGT,IAAaU,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACM,IAA1Bf,EAAegB,QACdF,EAAAA,EAAAA,KAACzB,EAAW,CAAAwB,SACTb,EAAeiB,KACd,SAAAC,EAAkDC,GAAS,IAADC,EAAAF,EAAvDG,eAAkBC,EAAIF,EAAJE,KAAMC,EAAQH,EAARG,SAAYC,EAAON,EAAPM,QACrC,OACEZ,EAAAA,EAAAA,MAAA,MAAIa,UAAU,cAAaZ,SAAA,EACzBD,EAAAA,EAAAA,MAAA,KAAGa,UAAU,cAAaZ,SAAA,CAAC,SAAOS,MAClCV,EAAAA,EAAAA,MAAA,KAAGa,UAAU,kBAAiBZ,SAAA,CAAC,cAAYU,MAC3CT,EAAAA,EAAAA,KAAA,KAAGW,UAAU,iBAAgBZ,SAAEW,MAHAL,EAAM,EAM3C,OAIJL,EAAAA,EAAAA,KAACrB,EAAW,CAACgC,UAAU,cAAaZ,SAAC,gDAM7C,C","sources":["services/getReviews.js","pages/Reviews/StyledReviews.styled.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '163fbdfae3746fb3162540a05c88c436';\n\nexport const getReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  return results;\n};\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  .reviewsItem {\n    margin-bottom: 20px;\n    border: 1px solid #ddd;\n    padding: 15px;\n    border-radius: 8px;\n  }\n\n  .reviewsName {\n    color: #333;\n    font-weight: bold;\n    margin: 5px 0;\n  }\n\n  .reviewsUserName {\n    color: #555;\n    margin: 5px 0;\n  }\n  .reviewsContent {\n    color: #777;\n    margin-top: 10px;\n  }\n`;\n\nexport const Description = styled.p`\n  color: #333;\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import Loader from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/getReviews';\nimport { Description, ReviewsList } from './StyledReviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsDetails, setReviewsDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        await getReviews(movieId).then(results => setReviewsDetails(results));\n      } catch (error) {\n        Notify.warning('Oops, something went wrong!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviewsDetails.length !== 0 ? (\n        <ReviewsList>\n          {reviewsDetails.map(\n            ({ author_details: { name, username }, content }, idx) => {\n              return (\n                <li className=\"reviewsItem\" key={idx + 1}>\n                  <p className=\"reviewsName\">Name: {name}</p>\n                  <p className=\"reviewsUserName\">User Name: {username}</p>\n                  <p className=\"reviewsContent\">{content}</p>\n                </li>\n              );\n            }\n          )}\n        </ReviewsList>\n      ) : (\n        <Description className=\"reviewsDesc\">\n          We don't have any reviews for this movie.\n        </Description>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","getReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","_yield$axios$get","results","_context","prev","next","concat","sent","data","abrupt","stop","_x","apply","arguments","ReviewsList","styled","_templateObject","_taggedTemplateLiteral","Description","_templateObject2","useParams","_useState","useState","_useState2","_slicedToArray","reviewsDetails","setReviewsDetails","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchReviews","then","t0","Notify","finish","_jsxs","children","_jsx","Loader","length","map","_ref2","idx","_ref2$author_details","author_details","name","username","content","className"],"sourceRoot":""}